<!doctype html>
<html lang="az">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>SmartExam.az — Demo (Çoxlu test + Abunə)</title>
  <meta name="description" content="SmartExam.az — onlayn testlər, nəticə analizi və abunə sistemi (demo)" />
  <style>
    :root{--bg:#f6fbff;--card:#fff;--primary:#0f62fe;--muted:#6b7280;--radius:12px;--shadow:0 6px 20px rgba(16,24,40,0.08);font-family:Inter,ui-sans-serif,system-ui,-apple-system,'Segoe UI',Roboto,'Helvetica Neue',Arial}
    *{box-sizing:border-box}
    body{margin:0;background:var(--bg);color:#0f172a}
    header{background:linear-gradient(90deg,var(--primary),#0753d1);color:#fff;padding:20px;border-radius:0 0 14px 14px}
    .container{max-width:1100px;margin:18px auto;padding:16px}
    .brand{display:flex;align-items:center;gap:12px}
    .logo{width:52px;height:52px;border-radius:10px;background:#fff;display:flex;align-items:center;justify-content:center;color:var(--primary);font-weight:700}
    h1{margin:0;font-size:18px}
    .grid{display:grid;grid-template-columns:1fr 360px;gap:18px;margin-top:18px}
    .card{background:var(--card);border-radius:var(--radius);box-shadow:var(--shadow);padding:16px}
    .btn{background:var(--primary);color:#fff;padding:10px 12px;border-radius:10px;border:none;cursor:pointer}
    .muted{color:var(--muted)}
    .subject-list{display:flex;gap:8px;flex-wrap:wrap}
    .subject{padding:8px 10px;border-radius:10px;background:#eef6ff;border:1px solid rgba(21,101,192,0.08);cursor:pointer}
    .subject.active{background:var(--primary);color:#fff}
    .test-list{display:flex;flex-direction:column;gap:8px}
    .test-item{display:flex;justify-content:space-between;align-items:center;padding:12px;border-radius:10px;border:1px solid #eef2ff}
    .question{margin:12px 0}
    .options{display:flex;flex-direction:column;gap:8px}
    .option{padding:12px;border-radius:10px;border:1px solid #e6eefc;cursor:pointer}
    .option.selected{background:#e9f4ff;border-color:var(--primary)}
    .timer{font-weight:600;color:var(--muted)}
    footer{margin-top:20px;text-align:center;color:var(--muted);font-size:13px;padding:20px}
    .modal-back{position:fixed;inset:0;background:rgba(2,6,23,0.45);display:flex;align-items:center;justify-content:center;z-index:60}
    .modal{background:white;border-radius:12px;padding:18px;max-width:520px;width:96%;box-shadow:0 10px 40px rgba(2,6,23,0.25)}
    .input{width:100%;padding:10px;border-radius:8px;border:1px solid #eef2ff;margin-top:8px}
    .row{display:flex;gap:8px}
    @media(max-width:980px){.grid{grid-template-columns:1fr}.logo{width:44px;height:44px}}
  </style>
</head>
<body>
  <header>
    <div class="container brand">
      <div class="logo">SE</div>
      <div>
        <h1>SmartExam.az</h1>
        <div class="muted">Çoxlu testlər + təhlükəsiz abunə demo</div>
      </div>
    </div>
  </header>

  <main class="container">
    <div class="grid">
      <section>
        <div class="card">
          <div style="display:flex;justify-content:space-between;align-items:center">
            <div>
              <h2 style="margin:0 0 6px 0">Testlər və Fənlər</h2>
              <div class="muted">Pulsuz və premium testlər. Premium üçün abunə lazımdır.</div>
            </div>
            <div>
              <button class="btn" id="start-random">Sınaq Testi Başla</button>
            </div>
          </div>

          <div style="margin-top:14px">
            <div class="subject-list" id="subjects"></div>
          </div>

          <hr style="margin:16px 0;border:none;border-top:1px solid #eef2ff" />

          <h3 style="margin:0 0 8px 0">Mövcud Testlər (bir neçəsi)</h3>
          <div class="test-list" id="test-list"></div>
        </div>

        <div class="card" style="margin-top:14px" id="runner-card" hidden>
          <div style="display:flex;justify-content:space-between;align-items:center">
            <div>
              <strong id="test-title">Test adı</strong>
              <div class="muted" id="test-meta">5 sual · 5 dəq</div>
            </div>
            <div class="timer" id="timer">--:--</div>
          </div>

          <div id="question-area" style="margin-top:12px"></div>

          <div style="display:flex;justify-content:space-between;margin-top:12px">
            <button class="btn" id="prev-q">Geri</button>
            <div style="display:flex;gap:8px">
              <button class="btn" id="next-q">Növbəti</button>
              <button style="background:#e6eefc;color:var(--primary);border:none;padding:10px 12px;border-radius:10px;cursor:pointer" id="end-test">Testi Bitir</button>
            </div>
          </div>
        </div>

        <div class="card" style="margin-top:14px" id="result-card" hidden>
          <h3>Nəticən</h3>
          <div id="result-summary"></div>
          <div style="margin-top:12px;display:flex;gap:8px">
            <button class="btn" id="retry">Yenidən Sına</button>
            <button style="background:#fff;border:1px solid var(--primary);color:var(--primary);padding:8px 12px;border-radius:10px;cursor:pointer" id="save-result">Nəticəni Saxla</button>
          </div>
        </div>

      </section>

      <aside>
        <div class="card">
          <h3>Premium</h3>
          <p class="muted">Premium: geniş sual bankı, PDF paketlər və simulyasiya imtahanları.</p>
          <div style="margin-top:12px;display:flex;gap:8px">
            <button class="btn" id="buy-premium">Abunə ol - 5 AZN / ay</button>
          </div>
          <hr style="margin:12px 0;border:none;border-top:1px solid #f1f5f9" />
          <h4>Tez başla</h4>
          <div style="display:flex;flex-direction:column;gap:6px;margin-top:8px">
            <button style="padding:10px;border-radius:8px;border:1px dashed #e6eefc;background:transparent;cursor:pointer" id="quick-math">Riyaziyyat: 10 sual</button>
            <button style="padding:10px;border-radius:8px;border:1px dashed #e6eefc;background:transparent;cursor:pointer" id="quick-az">Azərbaycan Dili: 8 sual</button>
            <button style="padding:10px;border-radius:8px;border:1px dashed #e6eefc;background:transparent;cursor:pointer" id="quick-eng">İngilis: 12 sual (Premium)</button>
          </div>
        </div>

        <div class="card" style="margin-top:14px">
          <h4>Keçmiş nəticələr</h4>
          <div id="saved-results" class="muted">Saxlanılan nəticə yoxdur</div>
        </div>

      </aside>
    </div>

    <footer>
      Demo sayt — təhlükəsiz praktikaları göstərir. Real ödəniş üçün server tərəfi və etibarlı provayder (GoldenPay/Portmanat/Stripe) tələb olunur.
    </footer>
  </main>

  <!-- Modal area -->
  <div id="modal-root" style="display:none"></div>

  <script>
    (function(){
      'use strict'

      const DB = {
        subjects:[
          {id:'math',name:'Riyaziyyat'},
          {id:'aze',name:'Azərbaycan Dili'},
          {id:'eng',name:'İngilis Dili'},
          {id:'phy',name:'Fizika'},
          {id:'chem',name:'Kimya'}
        ],
        tests:[]
      }

      function genTests(){
        let idCounter=1
        const make = (subject,title,count,premium=false)=>{
          const questions=[]
          for(let i=1;i<=count;i++){
            const a=(i*3)%4
            questions.push({q:`${title}: Sual ${i}?`,choices:[`A${i}`,`B${i}`,`C${i}`,`D${i}`],answer:a,explain:`Doğru cavab: ${['A','B','C','D'][a]}`})
          }
          DB.tests.push({id:`t-${idCounter++}`,subject,title,duration:Math.max(300,count*30),level:'orta',premium,questions})
        }

        make('math','Riyaziyyat - Əsas',10,false)
        make('math','Riyaziyyat - Dərin',25,true)
        make('aze','Azərbaycan Dili - Qrammatika',8,false)
        make('eng','İngilis - Beginner',12,true)
        make('phy','Fizika - Test',15,false)
        make('chem','Kimya - Sınaq',12,false)
      }
      genTests()

      const state = {subject:null,test:null,idx:0,answers:{},timer:null,timeLeft:0}

      const subjectsEl = document.getElementById('subjects')
      const testListEl = document.getElementById('test-list')
      const runnerCard = document.getElementById('runner-card')
      const testTitleEl = document.getElementById('test-title')
      const testMetaEl = document.getElementById('test-meta')
      const timerEl = document.getElementById('timer')
      const questionArea = document.getElementById('question-area')
      const resultCard = document.getElementById('result-card')
      const resultSummary = document.getElementById('result-summary')
      const savedResultsEl = document.getElementById('saved-results')

      function init(){ renderSubjects(); renderTests(); bindUI(); loadSavedResults(); updatePremiumUI(); }

      function renderSubjects(){ subjectsEl.innerHTML=''; DB.subjects.forEach(s=>{
        const btn=document.createElement('div')
        btn.className='subject'
        btn.textContent=s.name
        btn.onclick=()=>{ selectSubject(s.id,btn) }
        subjectsEl.appendChild(btn)
      }) }

      function selectSubject(id,el){ state.subject=id; document.querySelectorAll('.subject').forEach(x=>x.classList.remove('active')); el.classList.add('active'); renderTests() }

      function renderTests(){ testListEl.innerHTML=''; const tests = DB.tests.filter(t=> state.subject? t.subject===state.subject:true)
        tests.forEach(t=>{
          const div=document.createElement('div')
          div.className='test-item'
          div.innerHTML = `<div><strong>${t.title}</strong><div class='muted'>${t.questions.length} sual · ${(t.duration/60).toFixed(0)} dəq ${t.premium? '· Premium':''}</div></div>`
          const actions=document.createElement('div')
          const start=document.createElement('button')
          start.className='btn'
          start.textContent='Başla'
          start.onclick=()=> startTest(t.id)
          actions.appendChild(start)
          div.appendChild(actions)
          testListEl.appendChild(div)
        }) }

      function startTest(testId){
        const t = DB.tests.find(x=>x.id===testId)
        if(!t) return
        if(t.premium && !isPremium()){
          showPaymentModal(5,'Premium abunə (1 ay)', ()=>{ setPremium(true); startTest(testId) })
          return
        }
        state.test=t; state.idx=0; state.answers={}; state.timeLeft=t.duration; showRunner(); renderQuestion(); startTimer()
      }

      function showRunner(){ runnerCard.hidden=false; resultCard.hidden=true; testTitleEl.textContent=state.test.title; testMetaEl.textContent = `${state.test.questions.length} sual · ${(state.test.duration/60).toFixed(0)} dəq` }

      function renderQuestion(){ const q = state.test.questions[state.idx]; questionArea.innerHTML=''; const elQ=document.createElement('div'); elQ.className='question'; elQ.innerHTML = `<div style='font-weight:700'>${state.idx+1}. ${q.q}</div><div class='muted' style='margin-top:6px'>Açıqlama: <span class='muted' style='opacity:0.85'>${q.explain}</span></div>`; questionArea.appendChild(elQ); const opts=document.createElement('div'); opts.className='options'; q.choices.forEach((c,i)=>{ const o=document.createElement('div'); o.className='option'; o.textContent=c; if(state.answers[state.idx]===i) o.classList.add('selected'); o.onclick=()=>{ state.answers[state.idx]=i; document.querySelectorAll('.option').forEach(x=>x.classList.remove('selected')); o.classList.add('selected') }; opts.appendChild(o) }); questionArea.appendChild(opts) }

      function nextQuestion(){ if(state.idx < state.test.questions.length-1){ state.idx++; renderQuestion() } else { endTest() } }
      function prevQuestion(){ if(state.idx>0){ state.idx--; renderQuestion() } }
      function endTest(){ stopTimer(); showResult() }

      function showResult(){ runnerCard.hidden=true; resultCard.hidden=false; const total=state.test.questions.length; let correct=0; const details=[]; state.test.questions.forEach((q,i)=>{ const sel=state.answers[i]; const ok = sel===q.answer; if(ok) correct++; details.push({q:q.q,sel: sel!=null? q.choices[sel] : 'Seçilməyib',ans:q.choices[q.answer],ok}) }); const percent=Math.round(correct/total*100); resultSummary.innerHTML = `<div><strong>Sənin nəticən: ${correct}/${total} — ${percent}%</strong></div>`; const det = document.createElement('div'); det.style.marginTop='8px'; det.innerHTML = details.map(d=>`<div style='padding:8px;border-radius:8px;border:1px solid #f1f5f9;margin-top:6px'><div style='font-weight:600'>${d.q}</div><div class='muted'>Sənin cavab: ${d.sel} · Doğru cavab: ${d.ans}</div></div>`).join(''); resultSummary.appendChild(det) }

      function startTimer(){ updateTimerDisplay(); state.timer = setInterval(()=>{ state.timeLeft--; if(state.timeLeft<=0){ stopTimer(); endTest() } updateTimerDisplay() },1000) }
      function stopTimer(){ if(state.timer) clearInterval(state.timer); state.timer=null }
      function updateTimerDisplay(){ const mm = Math.floor(state.timeLeft/60).toString().padStart(2,'0'); const ss = (state.timeLeft%60).toString().padStart(2,'0'); timerEl.textContent = mm+':'+ss }

      function isPremium(){ return localStorage.getItem('smartexam_premium')==='1' }
      function setPremium(v){ localStorage.setItem('smartexam_premium', v? '1':'0'); updatePremiumUI() }
      function updatePremiumUI(){ const buyBtn=document.getElementById('buy-premium'); buyBtn.textContent = isPremium() ? 'Premium — aktivdir' : 'Abunə ol - 5 AZN / ay'; buyBtn.disabled = isPremium() }

      function showPaymentModal(amount,description,onSuccess){
        const root=document.getElementById('modal-root');
        root.style.display='block';
        root.innerHTML = `<div class="modal-back" role="dialog" aria-modal="true"><div class="modal"><h3>Premium abunə — ${amount} AZN</h3><p class='muted'>${description}</p>
          <div style='margin-top:8px'><label>Kart sahibi (ad)</label><input class='input' id='card-name' placeholder='Ad Soyad' autocomplete='cc-name' /></div>
          <div style='margin-top:8px'><label>Kart nömrəsi (demo)</label><input class='input' id='card-num' placeholder='4242 4242 4242 4242' autocomplete='cc-number' /></div>
          <div class='row' style='margin-top:8px'><input class='input' id='card-exp' placeholder='MM/YY' style='flex:1' autocomplete='cc-exp' /><input class='input' id='card-cvc' placeholder='CVC' style='width:110px' autocomplete='cc-csc' /></div>
          <div style='margin-top:12px;display:flex;justify-content:flex-end;gap:8px'><button id='pay-cancel' style='background:#fff;border:1px solid var(--primary);color:var(--primary);padding:8px 12px;border-radius:8px;cursor:pointer'>İmtina</button><button id='pay-now' class='btn'>Ödə (demo)</button></div>
          <div style='margin-top:12px;font-size:13px;color:var(--muted)'>Qeyd: Demo rejimindəsiniz — real tətbiqdə kart məlumatları yalnız provayder vasitəsilə tokenizasiyaya göndərilməlidir.</div>
        </div></div>`

        document.getElementById('pay-cancel').onclick = ()=>{ root.style.display='none'; root.innerHTML=''; }
        document.getElementById('pay-now').onclick = async ()=>{
          const name = document.getElementById('card-name').value.trim()
          const num = document.getElementById('card-num').value.replace(/\s+/g,'')
          const exp = document.getElementById('card-exp').value.trim()
          const cvc = document.getElementById('card-cvc').value.trim()
          if(!name || !num || !exp || !cvc){ alert('Zəhmət olmasa bütün kart məlumatlarını doldurun'); return }

          try{
            const token = await simulateTokenization({num,exp,cvc,name})
            const receipt = await simulateServerCharge(token, amount)
            savePaymentRecord(receipt)
            setPremium(true)
            root.style.display='none'; root.innerHTML=''
            alert('Ödəniş uğurlu (demo). Premium aktivdir.')
            if(typeof onSuccess==='function') onSuccess()
          }catch(err){ alert('Ödəniş alınmadı: '+(err.message||err)) }
        }
      }

      function simulateTokenization(card){
        return new Promise((resolve,reject)=>{
          if(card.num.length < 12) return reject(new Error('Kart nömrəsi qısa'))
          setTimeout(()=> resolve('tok_'+Math.random().toString(36).slice(2,10)),500)
        })
      }

      function simulateServerCharge(token, amount){
        return new Promise((resolve)=>{
          setTimeout(()=> resolve({id:'rcpt_'+Date.now(),token,amount,time:new Date().toISOString()}),700)
        })
      }

      function savePaymentRecord(r){ const arr = JSON.parse(localStorage.getItem('smartexam_payments')||'[]'); arr.push(r); localStorage.setItem('smartexam_payments', JSON.stringify(arr)); }
      function loadSavedResults(){ const saved=JSON.parse(localStorage.getItem('smartexam_saved')||'[]'); if(!saved.length){ savedResultsEl.textContent='Saxlanılan nəticə yoxdur'; return } savedResultsEl.innerHTML = saved.map(s=>`<div style='padding:8px;border-bottom:1px solid #f1f5f9'><strong>${s.title}</strong><div class='muted'>${s.correct} doğru · ${new Date(s.time).toLocaleString()}</div></div>`).join('') }
      function saveResult(){ if(!state.test) return alert('Əvvəl test götür') const saved=JSON.parse(localStorage.getItem('smartexam_saved')||'[]'); const correct = state.test.questions.reduce((acc,q,i)=> acc + (state.answers[i]===q.answer?1:0),0); saved.push({testId:state.test.id,title:state.test.title,correct,time:(new Date()).toISOString()}); localStorage.setItem('smartexam_saved', JSON.stringify(saved)); loadSavedResults(); alert('Nəticə saxlanıldı') }

      function bindUI(){ document.getElementById('start-random').onclick = ()=>{ const t = DB.tests.find(x=>!x.premium); if(t) startTest(t.id) }
        document.getElementById('next-q').onclick = nextQuestion
        document.getElementById('prev-q').onclick = prevQuestion
        document.getElementById('end-test').onclick = ()=>{ if(confirm('Testi bitirmək istəyirsən?')) endTest() }
        document.getElementById('retry').onclick = ()=>{ if(state.test) startTest(state.test.id) }
        document.getElementById('save-result').onclick = saveResult
        document.getElementById('buy-premium').onclick = ()=>{ showPaymentModal(5,'Premium abunə (1 ay)', ()=>{}) }
        document.getElementById('quick-math').onclick = ()=>{ const t = DB.tests.find(x=>x.title.includes('Riyaziyyat - Əsas')); if(t) startTest(t.id) }
        document.getElementById('quick-az').onclick = ()=>{ const t = DB.tests.find(x=>x.title.includes('Azərbaycan Dili')); if(t) startTest(t.id) }
        document.getElementById('quick-eng').onclick = ()=>{ const t = DB.tests.find(x=>x.title.includes('İngilis - Beginner')); if(t) startTest(t.id) }
      }

      window._smartexam = {DB,state}

      init(); bindUI();

    })()
  </script>

</body>
</html>
